name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Runs on push to main branch
    paths:
      - '**/*.py'
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - '**/Dockerfile'
      - '**/requirements.txt'
  pull_request:
    branches:
      - main  # Runs on pull request merge to main branch
    paths:
      - '**/*.py'
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - '**/Dockerfile'
      - '**/requirements.txt'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: srz2
      DOCKER_IMAGE: tonieput

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensures all tags are fetched

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Ensure commit has a tag
      id: check_tag
      run: |
        TAG=$(git describe --tags --abbrev=0)
        if [[ -z "$TAG" ]]; then
          echo "No tag found on this commit, skipping docker deployment"
          exit 0
        fi
        # Remove the 'v' from the tag (e.g., 'v1.0' -> '1.0')
        TAG=${TAG#v}
        # Ensure the tag follows the format Major.Minor (e.g., 1.0)
        if [[ ! "$TAG" =~ ^[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Tag format must be Major.Minor (e.g., 1.0)"
          exit 1
        fi
        echo "Found tag: $TAG"
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Build and Push Docker image
      run: |
        docker buildx build --push --platform linux/amd64,linux/arm64 -t ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.TAG }} .

    - name: Log out from Docker Hub
      run: |
        docker logout
